spring:
  profiles:
    group:
      local: "local, server, jwt, oauth, springdoc"
    active: local
  jpa:
    show-sql: true
    database-platform: org.hibernate.dialect.H2Dialect
    generate-ddl: true
    hibernate:
      ddl-auto: none
    properties:
      hibernate:
        show_sql: true
        format_sql: true
  h2:
    console:
      enabled: true
  datasource:
    url: jdbc:h2:mem:testdb
    driver-class-name: org.h2.Driver
    username: sa
    password: 1234
  sql:
    init:
      enabled: true

server:
  port: 8080
#  servlet:
#    context-path: /api

#logging:
#  level:
#    b172.challenging: debug

---
spring:
  profiles:
    include: jwt
jwt:
  secretKey: "sdaspdjaskdjsaknfoasofnqwownfqfjoqwfnouwqnvownquvnqiwunvqviwqnowvniqwvuqwnivnqiwnvuiqwnviqwnvqwuinvuqiwnvwqiuvwnwuqivquiwdxn"
  access:
    expiration: 3600
    header: "Authorization"
  refresh:
    expiration: 2592000
    header: "RefreshToken"

---
spring:
  profiles:
    include: springdoc

springdoc:
  default-consumes-media-type: application/json;charset=UTF-8
  default-produces-media-type: application/json;charset=UTF-8
  swagger-ui:
    path: /index.html
    #disable-swagger-default-url: true
    #display-query-params-without-oauth2: true
    tags-sorter: alpha            # alpha: 알파벳 순 태그 정렬, method: HTTP Method 순 정렬
    operations-sorter: alpha      # alpha: 알파벳 순 태그 정렬, method: HTTP Method 순 정렬
  api-docs:
    path: /api-docs
    groups:
      enabled: true
  cache:
    disabled: true

---
spring:
  profiles:
    include: oauth
  security:
    oauth2:
      client:
        registration:
          google:
            client-id:
            client-secret:
            redirectUri: "{baseUrl}/oauth2/callback/{registrationId}"
            scope:
              - email
              - profile

