plugins {
	id 'java'
	id 'org.springframework.boot' version '3.1.5'
	id 'io.spring.dependency-management' version '1.1.3'
	//checkstyle
	id 'checkstyle'
}

group = 'b172'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

//checkstyle
compileJava.options.encoding = 'UTF-8'
compileTestJava.options.encoding = 'UTF-8'

tasks.withType(Checkstyle) {
	reports {
		xml.required = true
		html.required = true
	}
}

checkstyle {
	maxWarnings = 0
	configFile = file("checkstyle/naver-checkstyle-rules.xml")
	configProperties = ["suppressionFile": "checkstyle/naver-checkstyle-suppressions.xml"]
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'com.h2database:h2'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'

	implementation 'com.mysql:mysql-connector-j'
	// Spring Security
	implementation "org.springframework.boot:spring-boot-starter-security"
	implementation "org.springframework.security:spring-security-test"

	//oauth2
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'

	// JWT
	implementation 'com.auth0:java-jwt:4.4.0'

	// Spring Doc
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.2.0'

	//queryDSL
	implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
	annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jakarta"
	annotationProcessor "jakarta.annotation:jakarta.annotation-api"
	annotationProcessor "jakarta.persistence:jakarta.persistence-api"

	// NCloud object storage
	implementation group: 'com.amazonaws', name: 'aws-java-sdk-s3', version: '1.12.651'

	implementation 'org.springframework.boot:spring-boot-starter-data-redis'

	// ADMIN 을 위한 의존성
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'

	// RESOURCE RELOAD 를 위한 의존성
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
}

def querydslSrcDir = 'src/main/generated'
clean {
	delete file(querydslSrcDir)
}
tasks.withType(JavaCompile) {
	options.generatedSourceOutputDirectory = file(querydslSrcDir)
}

tasks.named('test') {
	useJUnitPlatform()
}
